# 闭包：在函数中再嵌套一个函数，并且引用外部函数的变量，这就是一个闭包了
"""
闭包：
    概念：
        闭 函数指的是该函数为内嵌函数
        包 函数指该函数包含对外层函数作用于名字的引用（不是对全局函数）
    核心：
        名字查找关系以函数定义阶段为准
    执行闭包：
        先使用参数a=闭包函数()，将闭包函数内部函数地址赋值给参数a
        执行a()，即执行了闭包函数
"""


def f2(x):
    # x = 10    # 也可以将x作为f2()参数，写作f2(x)，不让其写死
    def f1(y):
        print(x*10*y)
    return f1


x = 20  # 此处将X赋值为20，但是闭包x函数只看外层函数，因此还是10
ff = f2(5)   # 将闭包函数内的f1函数地址传给ff
ff(5)    # 执行函数，相当于执行f1（）
print(ff)   # <function f2.<locals>.f1 at 0x00D6E5C8>


"""
复杂闭包示例：
"""
x = 1

def f1():
    # x = 2
    def f2():
        print(x)

    return f2

def f3():
    x=3
    f2=f1() #调用f1()相当于将f1()闭包函数中的f2()内存地址给了f2()，这两个f2不是一个东西，也可以写作x = f1()
    f2() #执行f2相当于执行了闭包函数中的f2(),或者x()，因为是闭包函数，因此只看函数内容部，从上至下，所以x=1

f3() #结果为1